import { useState } from "react";
import { motion } from "framer-motion";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";

const memories = [
  {
    id: 1,
    image: "https://i.imgur.com/vIiTjkR.jpeg",
    text: "–ü–æ–º–Ω–∏—Ç–µ —Ç–æ—Ç –≤–µ—á–µ—Ä? –ö–æ–≥–¥–∞ 10 –º–∏–Ω—É—Ç–Ω—É—é –¥–æ—Ä–æ–≥—É –º—ã —Ö–æ–¥–∏–ª–∏ 2 —á–∞—Å–∞, —Å–º–µ—è–ª–∏—Å—å, —à—É—Ç–∏–ª–∏, –æ—Ç–¥—É—à–∏ –∫—É—ã–ø —Ç–æ–ª—å–∫–æ –ø–æ—Ç–æ–º –∑–∞—à–ª–∏ –∏ –≤ –∫–æ–Ω—Ü–µ —Å –ú–∞–¥–∏–Ω–æ–π –æ–±—å—è—Å–Ω–∏—Ç–µ–ª—å–Ω—É—é –ø–∏—Å–∞–ª–∏ –∞—Ö–∞—Ö",
  },
  {
    id: 2,
    image: "https://i.imgur.com/cr5CGjP.jpeg",
    text: "–í —ç—Ç–æ—Ç –¥–µ–Ω—å —è –∏—Å–ø—ã—Ç–∞–ª–∞ —Ç–∞–∫–∏–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –∫–∞—á–µ–ª–∏ –µ–º–∞–µ, —Å —Å–∞–º–æ–≥–æ –Ω–∞—á–∞–ª–∞ –¥–æ—Ä–æ–≥–∏ —è –≤–æ–ª–Ω–æ–≤–∞–ª–∞—Å—å –æ–∂–∏–¥–∞—è –≤—Å—Ç—Ä–µ—á—É —Å –≤–∞–º–∏, –∏ –∫–æ–≥–¥–∞ –º–Ω–µ —Å–∫–∞–∑–∞–ª–∏ —á—Ç–æ –ø—Ä–æ–¥–µ–ª–∞–≤ –≤–µ—Å—å –ø—É—Ç—å —è –Ω–µ —É–≤–∏–∂—É—Å—å —Å –≤–∞–º–∏ –∞ –ø–æ—Ç–æ–º —Ç–æ —á—Ç–æ —É–≤–∏–∂—É—Å—å –∞ –ø–æ—Ç–æ–º –≤—ã –µ—â–µ –æ–±–∏–¥–µ–ª–∏—Å—å –Ω–∞ –º–µ–Ω—è —è –Ω–µ –∑–Ω–∞–ª–∞ —á—Ç–æ –¥–µ–ª–∞—Ç—å, –∏ —Ç–æ –∫–∞–∫ –º—ã –∑–∞–±–ª—É–¥–∏–ª–∏—Å—å –∫–æ–≥–¥–∞ –µ—Ö–∞–ª–∏ –∫ –≤–∞–º –∞—Ö–∞—Ö. –ù–æ –≤ –∏—Ç–æ–≥–µ –≤—Å—Ç—Ä–µ—á–∞ –∫–æ—Ç–æ—Ä—É—é —Ç–∞–∫ –∂–¥–∞–ª–∞ —Å–æ—Å—Ç–æ—è–ª–∞—Å—å, —è –±—ã–ª–∞ –æ—á–µ–Ω—å —Ä–∞–¥–∞, —è —Ç–∞–∫ –∑–∞—Ä—è–¥–∏–ª–∞—Å—å –≤–∞–º–∏ —á–µ—Å—Ç–Ω–æ, —Ö–æ—Ç—å –ø—Ä–æ–≤–µ–ª–∏ –Ω–µ —Ç–∞–∫ –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —É–≤–∏–¥–µ—Ç—å –≤–∞—Å- —ç—Ç–æ –ª—É—á—à–µ–µ.–≠—Ç–æ—Ç –¥–µ–Ω—å –±—ã–ª —Ç–∞–∫–∏–º —Ç—ë–ø–ª—ã–º –∏ —É—é—Ç–Ω—ã–º! ‚òïüíô",
  },
];

const hadiths = [
  "¬´–ö—Ç–æ –±—ã –Ω–∏ –æ–∫–∞–∑–∞–ª –ø–æ–º–æ—â—å –º—É—Å—É–ª—å–º–∞–Ω–∏–Ω—É, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ –æ–±—Ä—É—à–∏–ª–æ—Å—å –Ω–µ—Å—á–∞—Å—Ç—å–µ –≤ —ç—Ç–æ–º –º–∏—Ä–µ, –ê–ª–ª–∞—Ö –æ—Ç–≤–æ–¥–∏—Ç –æ—Ç –Ω–µ–≥–æ –Ω–µ—Å—á–∞—Å—Ç—å–µ –Ω–∞ —Ç–æ–º —Å–≤–µ—Ç–µ¬ª (–ú—É—Å–ª–∏–º). –í—ã –æ–∫–∞–∑–∞–ª–∏ –º–Ω–µ —Å–∞–º—É—é –ø—Ä–µ–∫—Ä–∞—Å–Ω—É –ø–æ–º–æ—â—å –≤ —Ç–µ –º–æ–º–µ–Ω—Ç—ã –∫–æ–≥–¥–∞ —è –Ω—É–∂–¥–∞–ª–∞—Å—å",
  "–ü—Ä–æ—Ä–æ–∫ (–º–∏—Ä –µ–º—É –∏ –±–ª–∞–≥–æ—Å–ª–æ–≤–µ–Ω–∏–µ) —Å–∫–∞–∑–∞–ª: '–ù–µ—Ç –∏–∑ –≤–∞—Å –≤–µ—Ä—É—é—â–µ–≥–æ, –ø–æ–∫–∞ –æ–Ω –Ω–µ –ø–æ–∂–µ–ª–∞–µ—Ç –±—Ä–∞—Ç—É —Å–≤–æ–µ–º—É —Ç–æ–≥–æ, —á–µ–≥–æ –∂–µ–ª–∞–µ—Ç —Å–µ–±–µ.' (–ë—É—Ö–∞—Ä–∏ –∏ –ú—É—Å–ª–∏–º)",
  "–ê–ª–ª–∞—Ö –ª—é–±–∏—Ç —Ç–µ—Ö, –∫—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Å–≤—è–∑—å —Å –±–ª–∏–∑–∫–∏–º–∏ –∏ –¥—Ä—É–∑—å—è–º–∏. (–ú—É—Å–ª–∏–º)"
];

const qualities = [
  "–î–æ–±—Ä–∞—è –∏ –∑–∞–±–æ—Ç–ª–∏–≤–∞—è",
  "–£–º–Ω–∞—è –∏ –º—É–¥—Ä–∞—è",
  "–í–µ—Å—ë–ª–∞—è –∏ –ø–æ–∑–∏—Ç–∏–≤–Ω–∞—è",
  "–í—Å–µ–≥–¥–∞ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç",
  "–ß–µ—Å—Ç–Ω–∞—è –∏ –∏—Å–∫—Ä–µ–Ω–Ω—è—è",
  "–°–≤–µ—Ç–ª—ã–π —á–µ–ª–æ–≤–µ–∫ —Å –æ–≥—Ä–æ–º–Ω—ã–º —Å–µ—Ä–¥—Ü–µ–º"
];

export default function MemorySite() {
  const [selectedMemory, setSelectedMemory] = useState(null);
  const [page, setPage] = useState("memories");

  return (
    <div className="flex flex-col items-center p-6 bg-gradient-to-r from-pink-300 to-blue-300 min-h-screen overflow-hidden relative">
      <motion.h1
        className="text-4xl font-bold text-white drop-shadow-md"
        initial={{ opacity: 0, y: -50 }}
        animate={{ opacity: 1, y: 0 }}
      >
        –ú–∞—Ä–∑–∏ –∞–ø–∞–π, –ø—Ä–æ—Å—Ç–∏—Ç–µ –º–µ–Ω—è üíñ
      </motion.h1>
      <p className="text-white mt-4">–Ø —Ö–æ—á—É –Ω–∞–ø–æ–º–Ω–∏—Ç—å –≤–∞–º, –∫–∞–∫–∞—è –≤—ã –∫–ª–∞—Å—Å–Ω–∞—è! ‚ú®</p>
      
      <div className="flex gap-4 mt-6">
        <Button onClick={() => setPage("memories")} className="bg-white text-black">–í–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏—è</Button>
        <Button onClick={() => setPage("qualities")} className="bg-white text-black">–¢–≤–æ–∏ –∫–∞—á–µ—Å—Ç–≤–∞</Button>
        <Button onClick={() => setPage("canvaPage")} className="bg-white text-black">–°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞</Button>
      </div>
      
      {page === "memories" && (
        <>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mt-6">
            {memories.map((memory) => (
              <Card
                key={memory.id}
                className="cursor-pointer hover:shadow-xl transition"
                onClick={() => setSelectedMemory(memory)}
              >
                <img src={memory.image} alt="Memory" className="rounded-lg" />
              </Card>
            ))}
          </div>
          
          {selectedMemory && (
            <motion.div
              className="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center p-4"
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
            >
              <div className="bg-white p-6 rounded-lg shadow-lg text-center max-w-lg">
                <img src={selectedMemory.image} alt="Memory" className="rounded-lg mb-4" />
                <p className="text-lg">{selectedMemory.text}</p>
                <Button onClick={() => setSelectedMemory(null)} className="mt-4">–ó–∞–∫—Ä—ã—Ç—å</Button>
              </div>
            </motion.div>
          )}
        </>
      )}
      
      {page === "qualities" && (
        <motion.div
          className="mt-8 p-4 bg-white rounded-lg shadow-lg max-w-md text-center"
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
        >
          <h2 className="text-xl font-bold mb-2">–í–∞—à–∏ –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ ‚ú®</h2>
          <ul className="text-gray-700 list-disc list-inside">
            {qualities.map((quality, index) => (
              <motion.li key={index} className="mb-2" initial={{ opacity: 0 }} animate={{ opacity: 1 }}>
                {quality}
              </motion.li>
            ))}
          </ul>
        </motion.div>
      )}
      
      {page === "canvaPage" && (
        <motion.div className="mt-8 p-4 bg-white rounded-lg shadow-lg max-w-md text-center" initial={{ opacity: 0 }} animate={{ opacity: 1 }}>
          <h2 className="text-xl font-bold mb-2">–°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞</h2>
          <a href="https://kamilka2kosmos.my.canva.site/" target="_blank" rel="noopener noreferrer" className="bg-blue-500 text-white py-2 px-4 rounded-lg shadow-lg mt-4 inline-block">
            üåü –û—Ç–∫—Ä—ã—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É üåü
          </a>
        </motion.div>
      )}
      
      <div className="mt-8 p-4 bg-white rounded-lg shadow-lg max-w-md text-center">
        <h2 className="text-xl font-bold mb-2">–ü—Ä–µ–∫—Ä–∞—Å–Ω—ã–µ —Ö–∞–¥–∏—Å—ã –æ –¥—Ä—É–∂–±–µ üí´</h2>
        {hadiths.map((hadith, index) => (
          <p key={index} className="text-gray-700 mb-2">"{hadith}"</p>
        ))}
      </div>
    </div>
  );
}
